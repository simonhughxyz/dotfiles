{{- if eq .chezmoi.os "windows" -}}
# vim: ft=ps1

# Colors
$SuccessColor = @{
  ForegroundColor = "White"
  BackgroundColor = "DarkGreen"
}
$HeaderColor = @{
  ForegroundColor = "White"
  BackgroundColor = "DarkMagenta"
}

Write-Host ("Initiating Windows setup...") @HeaderColor

$Modules = @(
  "PSWindowsUpdate",
  "PSFzf",
  "Terminal-Icons",
  "BurntToast"
)

$scoop = @(
  "chezmoi",
  "curl",
  "git",
  "neovim-nightly",
  "starship",
  "vieb",
  "brave",
  "firefox",
  "mpv",
  "fzf",
  "nerd-fonts/Hack-NF-Mono",
  "win32yank",
  "zoxide",
  "jq",
  "yq",
  "main/python"
  "main/pipx"
)

Write-Host ("Starting Module Install...") @HeaderColor
$Modules | ForEach-Object {
  Write-Host ("Installing {0}..." -f $_);
  try{
    Install-Module -Name $_ -Force
    Write-Host ("Success! Installed module: {0}" -f $_) @SuccessColor
  }catch{
    Write-Error ("Error! Could not install module: {0}" -f $_)
  }
  }

Write-Host ("Starting Windows Update...") @HeaderColor
try{
  Install-WindowsUpdate -AcceptAll
  Write-Host ("Success! Updated Windows") @SuccessColor
}catch{
  Write-Error ("Error! Could not update windows")
}

if ( -not (Get-Command -Name scoop)){
# Install scoop
  iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
}

scoop update

scoop bucket add main
scoop bucket add extras
scoop bucket add versions
scoop bucket add nerd-fonts

Write-Host "Starting Scoop Install..."
$scoop | ForEach-Object { write-host ("Installing {0}..." -f $_ ); scoop install $_ }

Write-Host ("Starting Application Set Up...") @HeaderColor

# set up qutebrowser
write-host "Installing qbpm..."
pipx.cmd install 'git+https://github.com/simonhughxyz/qbpm.git#egg=qbpm'

$QuteBrowserSymlinkPath = "~/AppData/Roaming/qutebrowser/config"
$QuteBrowserConfigPath = "~/.config/qutebrowser"

remove-item -force -recurse -confirm:$false -path $QuteBrowserSymlinkPath -ErrorAction SilentlyContinue
try{
  new-item -type SymbolicLink -path $QuteBrowserSymlinkPath -value $QuteBrowserConfigPath
}catch{
  Write-Error ("Error! Could not create Qutebrowser symbolic link")
}

# Set up registry values
write-host ("Starting Registry Setup...") @HeaderColor

$Parameters = @{
  Path = "HKLM:\Software\Policies\Microsoft\Windows\WcmSvc\"
  Name = "fMinimizeConnections"
}

$Property = Get-ItemProperty @Parameters -ErrorAction SilentlyContinue

if (-not ($Property)){
  try{
    New-ItemProperty @Parameters -Value 0 -PropertyType Dword -Force | Out-Null
    write-host ("Success! Enabled wifi auto connect when on Ethernet") @SuccessColor
  }catch{
    Write-Error ("Error! Could not enable wifi auto connect")
  }
}

{{- end -}}
